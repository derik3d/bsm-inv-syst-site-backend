openapi: 3.0.3
info:
  title: Bigstoremanager API
  description: API for managing products, orders, inventory items, and status updates.
  version: 1.0.0
servers:
  - url: http://localhost:5000
paths:
  /api_spec.yaml:
    get:
      summary: Get OpenAPI specification
      responses:
        '200':
          description: OpenAPI specification file
          content:
            application/yaml:
              schema:
                type: string
  /products:
    get:
      summary: List products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      summary: Get a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    put:
      summary: Update a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Product updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
    delete:
      summary: Delete a product by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product deleted
        '404':
          description: Product not found
  /product-types:
    get:
      summary: List product types
      responses:
        '200':
          description: List of product types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductType'
    post:
      summary: Create a new product type
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '201':
          description: Product type created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
  /product-types/{id}:
    get:
      summary: Get a product type by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product type details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
        '404':
          description: Product type not found
    put:
      summary: Update a product type by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductType'
      responses:
        '200':
          description: Product type updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductType'
        '404':
          description: Product type not found
    delete:
      summary: Delete a product type by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Product type deleted
        '404':
          description: Product type not found
  /orders:
    get:
      summary: List orders
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
  /orders/{id}:
    get:
      summary: Get an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
    put:
      summary: Update an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
    delete:
      summary: Delete an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Order deleted
        '404':
          description: Order not found
  /inventory-items:
    get:
      summary: List inventory items
      responses:
        '200':
          description: List of inventory items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryItem'
    post:
      summary: Create a new inventory item
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '201':
          description: Inventory item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
  /inventory-items/{id}:
    get:
      summary: Get an inventory item by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Inventory item details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '404':
          description: Inventory item not found
    put:
      summary: Update an inventory item by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryItem'
      responses:
        '200':
          description: Inventory item updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryItem'
        '404':
          description: Inventory item not found
    delete:
      summary: Delete an inventory item by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Inventory item deleted
        '404':
          description: Inventory item not found
  /status:
    get:
      summary: List status updates
      responses:
        '200':
          description: List of status updates
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusUpdate'
    post:
      summary: Create a new status update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
      responses:
        '201':
          description: Status update created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
  /status/{id}:
    get:
      summary: Get a status update by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Status update details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
        '404':
          description: Status update not found
    put:
      summary: Update a status update by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatusUpdate'
      responses:
        '200':
          description: Status update updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusUpdate'
        '404':
          description: Status update not found
    delete:
      summary: Delete a status update by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Status update deleted
        '404':
          description: Status update not found
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        product_name:
          type: string
        product_description:
          type: string
        fk_product_type_id:
          type: integer
    ProductType:
      type: object
      properties:
        id:
          type: integer
        type_name:
          type: string
        nemo:
          type: string
        parent_type_id:
          type: integer
    Order:
      type: object
      properties:
        id:
          type: string
        creation:
          type: number
          format: float
        updated:
          type: number
          format: float
        status:
          $ref: '#/components/schemas/StatusUpdate'
        status_trace:
          type: array
          items:
            $ref: '#/components/schemas/StatusUpdate'
        client_info:
          type: object
        inventory_items:
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
    StatusUpdate:
      type: object
      properties:
        id:
          type: string
        creation:
          type: number
          format: float
        status:
          type: string
        description:
          type: string
        order_info:
          type: object
    InventoryItem:
      type: object
      properties:
        id:
          type: string
        creation:
          type: number
          format: float
        product_id:
          type: integer
        product_name:
          type: string
        serial_number:
          type: string
        additional_info:
          type: object
        order_info:
          type: object
